   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/usart.c"
  18              		.align	1
  19              		.global	USART3_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	USART3_init:
  25              	.LFB191:
   1:src/usart.c   **** #include "usart.h"
   2:src/usart.c   **** #include "stm32f767xx.h"
   3:src/usart.c   **** #include "system_stm32f7xx.h"
   4:src/usart.c   **** 
   5:src/usart.c   **** void USART3_init()
   6:src/usart.c   **** {
  26              		.loc 1 6 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
   7:src/usart.c   ****     // checklist in 34.5.2
   8:src/usart.c   **** 
   9:src/usart.c   ****     // enable USART 3 at RCC
  10:src/usart.c   ****     RCC->APB1ENR |= (1 << RCC_APB1ENR_USART3EN_Pos);
  36              		.loc 1 10 8
  37 0004 184B     		ldr	r3, .L2
  38 0006 1B6C     		ldr	r3, [r3, #64]
  39 0008 174A     		ldr	r2, .L2
  40              		.loc 1 10 18
  41 000a 43F48023 		orr	r3, r3, #262144
  42 000e 1364     		str	r3, [r2, #64]
  11:src/usart.c   ****     // GPIO port D RCC enable
  12:src/usart.c   ****     RCC->AHB1ENR |= (1 << RCC_AHB1ENR_GPIODEN_Pos);
  43              		.loc 1 12 8
  44 0010 154B     		ldr	r3, .L2
  45 0012 1B6B     		ldr	r3, [r3, #48]
  46 0014 144A     		ldr	r2, .L2
  47              		.loc 1 12 18
  48 0016 43F00803 		orr	r3, r3, #8
  49 001a 1363     		str	r3, [r2, #48]
  13:src/usart.c   **** 
  14:src/usart.c   ****     // reset input/output mode and set to alternate function (AF) mode
  15:src/usart.c   ****     GPIOD->MODER &= ~(GPIO_MODER_MODER8_Msk | GPIO_MODER_MODER9_Msk);
  50              		.loc 1 15 10
  51 001c 134B     		ldr	r3, .L2+4
  52 001e 1B68     		ldr	r3, [r3]
  53 0020 124A     		ldr	r2, .L2+4
  54              		.loc 1 15 18
  55 0022 23F47023 		bic	r3, r3, #983040
  56 0026 1360     		str	r3, [r2]
  16:src/usart.c   ****     GPIOD->MODER |= (0b10 << GPIO_MODER_MODER8_Pos) | (0b10 << GPIO_MODER_MODER9_Pos);
  57              		.loc 1 16 10
  58 0028 104B     		ldr	r3, .L2+4
  59 002a 1B68     		ldr	r3, [r3]
  60 002c 0F4A     		ldr	r2, .L2+4
  61              		.loc 1 16 18
  62 002e 43F42023 		orr	r3, r3, #655360
  63 0032 1360     		str	r3, [r2]
  17:src/usart.c   **** 
  18:src/usart.c   ****     // reset GPIO AF selection (0 and 1 of high AF register are pins 8 and 9), then choose AF7 for 
  19:src/usart.c   ****     GPIOD->AFR[1] &= ~(GPIO_AFRH_AFRH0 | GPIO_AFRH_AFRH1);
  64              		.loc 1 19 10
  65 0034 0D4B     		ldr	r3, .L2+4
  66              		.loc 1 19 15
  67 0036 5B6A     		ldr	r3, [r3, #36]
  68              		.loc 1 19 10
  69 0038 0C4A     		ldr	r2, .L2+4
  70              		.loc 1 19 19
  71 003a 23F0FF03 		bic	r3, r3, #255
  72 003e 5362     		str	r3, [r2, #36]
  20:src/usart.c   ****     GPIOD->AFR[1] |= (0b0111 << GPIO_AFRH_AFRH0_Pos) | (0b0111 << GPIO_AFRH_AFRH1_Pos);
  73              		.loc 1 20 10
  74 0040 0A4B     		ldr	r3, .L2+4
  75              		.loc 1 20 15
  76 0042 5B6A     		ldr	r3, [r3, #36]
  77              		.loc 1 20 10
  78 0044 094A     		ldr	r2, .L2+4
  79              		.loc 1 20 19
  80 0046 43F07703 		orr	r3, r3, #119
  81 004a 5362     		str	r3, [r2, #36]
  21:src/usart.c   **** 
  22:src/usart.c   ****     // BRR is 25 Mhz/115200 baud = 217
  23:src/usart.c   ****     USART3->BRR = 217;
  82              		.loc 1 23 11
  83 004c 084B     		ldr	r3, .L2+8
  84              		.loc 1 23 17
  85 004e D922     		movs	r2, #217
  86 0050 DA60     		str	r2, [r3, #12]
  24:src/usart.c   ****     // usart enable and transmitter enable
  25:src/usart.c   ****     USART3->CR1 |= USART_CR1_UE | USART_CR1_TE | USART_CR1_RE;
  87              		.loc 1 25 11
  88 0052 074B     		ldr	r3, .L2+8
  89 0054 1B68     		ldr	r3, [r3]
  90 0056 064A     		ldr	r2, .L2+8
  91              		.loc 1 25 17
  92 0058 43F00D03 		orr	r3, r3, #13
  93 005c 1360     		str	r3, [r2]
  26:src/usart.c   **** }
  94              		.loc 1 26 1
  95 005e 00BF     		nop
  96 0060 BD46     		mov	sp, r7
  97              		.cfi_def_cfa_register 13
  98              		@ sp needed
  99 0062 80BC     		pop	{r7}
 100              		.cfi_restore 7
 101              		.cfi_def_cfa_offset 0
 102 0064 7047     		bx	lr
 103              	.L3:
 104 0066 00BF     		.align	2
 105              	.L2:
 106 0068 00380240 		.word	1073887232
 107 006c 000C0240 		.word	1073875968
 108 0070 00480040 		.word	1073760256
 109              		.cfi_endproc
 110              	.LFE191:
 112              		.align	1
 113              		.global	usart_write
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	usart_write:
 119              	.LFB192:
  27:src/usart.c   **** 
  28:src/usart.c   **** void usart_write(USART_TypeDef *usart, char c)
  29:src/usart.c   **** {
 120              		.loc 1 29 1
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0074 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0076 83B0     		sub	sp, sp, #12
 129              		.cfi_def_cfa_offset 16
 130 0078 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 007a 7860     		str	r0, [r7, #4]
 133 007c 0B46     		mov	r3, r1
 134 007e FB70     		strb	r3, [r7, #3]
  30:src/usart.c   ****     // write character to transmission data register
  31:src/usart.c   ****     usart->TDR = c;
 135              		.loc 1 31 16
 136 0080 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 137 0082 7B68     		ldr	r3, [r7, #4]
 138 0084 9A62     		str	r2, [r3, #40]
  32:src/usart.c   ****     // wait on transmission complete bit
  33:src/usart.c   ****     while (!(usart->ISR & USART_ISR_TC))
 139              		.loc 1 33 11
 140 0086 00BF     		nop
 141              	.L5:
 142              		.loc 1 33 19 discriminator 1
 143 0088 7B68     		ldr	r3, [r7, #4]
 144 008a DB69     		ldr	r3, [r3, #28]
 145              		.loc 1 33 25 discriminator 1
 146 008c 03F04003 		and	r3, r3, #64
 147              		.loc 1 33 12 discriminator 1
 148 0090 002B     		cmp	r3, #0
 149 0092 F9D0     		beq	.L5
  34:src/usart.c   ****         ;
  35:src/usart.c   **** }
 150              		.loc 1 35 1
 151 0094 00BF     		nop
 152 0096 00BF     		nop
 153 0098 0C37     		adds	r7, r7, #12
 154              		.cfi_def_cfa_offset 4
 155 009a BD46     		mov	sp, r7
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 009c 80BC     		pop	{r7}
 159              		.cfi_restore 7
 160              		.cfi_def_cfa_offset 0
 161 009e 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE192:
 165              		.align	1
 166              		.global	usart_read
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	usart_read:
 172              	.LFB193:
  36:src/usart.c   **** 
  37:src/usart.c   **** char usart_read(USART_TypeDef* usart)
  38:src/usart.c   **** {
 173              		.loc 1 38 1
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 00a0 80B4     		push	{r7}
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 7, -4
 181 00a2 83B0     		sub	sp, sp, #12
 182              		.cfi_def_cfa_offset 16
 183 00a4 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 00a6 7860     		str	r0, [r7, #4]
  39:src/usart.c   ****     // wait for character to appear in buffer
  40:src/usart.c   ****     while (!(USART3->ISR & USART_ISR_RXNE));
 186              		.loc 1 40 11
 187 00a8 00BF     		nop
 188              	.L7:
 189              		.loc 1 40 20 discriminator 1
 190 00aa 074B     		ldr	r3, .L9
 191 00ac DB69     		ldr	r3, [r3, #28]
 192              		.loc 1 40 26 discriminator 1
 193 00ae 03F02003 		and	r3, r3, #32
 194              		.loc 1 40 12 discriminator 1
 195 00b2 002B     		cmp	r3, #0
 196 00b4 F9D0     		beq	.L7
  41:src/usart.c   ****     return USART3->RDR;
 197              		.loc 1 41 18
 198 00b6 044B     		ldr	r3, .L9
 199 00b8 5B6A     		ldr	r3, [r3, #36]
 200 00ba DBB2     		uxtb	r3, r3
  42:src/usart.c   **** 
  43:src/usart.c   **** }...
 201              		.loc 1 43 1
 202 00bc 1846     		mov	r0, r3
 203 00be 0C37     		adds	r7, r7, #12
 204              		.cfi_def_cfa_offset 4
 205 00c0 BD46     		mov	sp, r7
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 00c2 80BC     		pop	{r7}
 209              		.cfi_restore 7
 210              		.cfi_def_cfa_offset 0
 211 00c4 7047     		bx	lr
 212              	.L10:
 213 00c6 00BF     		.align	2
 214              	.L9:
 215 00c8 00480040 		.word	1073760256
 216              		.cfi_endproc
 217              	.LFE193:
 219              	.Letext0:
 220              		.file 2 "/home/ben/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/
 221              		.file 3 "/home/ben/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_std
 222              		.file 4 "vendor/stm32f767xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccUf7t5w.s:18     .text:00000000 $t
     /tmp/ccUf7t5w.s:24     .text:00000000 USART3_init
     /tmp/ccUf7t5w.s:106    .text:00000068 $d
     /tmp/ccUf7t5w.s:112    .text:00000074 $t
     /tmp/ccUf7t5w.s:118    .text:00000074 usart_write
     /tmp/ccUf7t5w.s:171    .text:000000a0 usart_read
     /tmp/ccUf7t5w.s:215    .text:000000c8 $d
                           .group:00000000 wm4.0.b9144c81caf0c2c1ee9424d16d32a8e9
                           .group:00000000 wm4.stm32f7xx.h.38.be673aa88a778c9c25ecd83f19170569
                           .group:00000000 wm4.stm32f767xx.h.34.d0ba5a0a33e572d9abba2a69be3f047a
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.d554620bb17bd3b714c3fb5c268772bc
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.30.d128735bf87720f7436b74fefeb5043c
                           .group:00000000 wm4.core_cm7.h.67.c4fc7696682f9e831eac3dd54a48d9d5
                           .group:00000000 wm4.arm_acle.h.28.a0697f530ff2dbf8c463bef049b82760
                           .group:00000000 wm4.cmsis_gcc.h.39.eba7438bc45fd1a6e6376b63ffe44436
                           .group:00000000 wm4.cmsis_gcc_m.h.24.23847e2e684820077e61f12ca9bb647d
                           .group:00000000 wm4.core_cm7.h.182.bdcc4e50bcd2482b3ee7b3848e1c3d57
                           .group:00000000 wm4.armv7m_mpu.h.24.6a1cc6ec2305a465645532db695e36b9
                           .group:00000000 wm4.armv7m_cachel1.h.24.936dd92d6e204a8d0b17d5e4ea4a356e
                           .group:00000000 wm4.stm32f767xx.h.1291.96cbc8c974f635ff90f2e384fa7968c7
                           .group:00000000 wm4.stm32f7xx.h.166.1a4552c215c7df501f12e87834ed026b

NO UNDEFINED SYMBOLS
