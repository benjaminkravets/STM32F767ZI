   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/dma.c"
  18              		.align	1
  19              		.global	DMA2_channel_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	DMA2_channel_init:
  25              	.LFB194:
   1:src/dma.c     **** #include "stm32f767xx.h"
   2:src/dma.c     **** #include "system_stm32f7xx.h"
   3:src/dma.c     **** #include "dma.h"
   4:src/dma.c     **** #include <stdio.h>
   5:src/dma.c     **** 
   6:src/dma.c     **** void DMA2_channel_init()
   7:src/dma.c     **** {
  26              		.loc 1 7 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
   8:src/dma.c     ****     RCC->AHB1ENR |= (RCC_AHB1ENR_DMA2EN);
  36              		.loc 1 8 8
  37 0004 044B     		ldr	r3, .L2
  38 0006 1B6B     		ldr	r3, [r3, #48]
  39 0008 034A     		ldr	r2, .L2
  40              		.loc 1 8 18
  41 000a 43F48003 		orr	r3, r3, #4194304
  42 000e 1363     		str	r3, [r2, #48]
   9:src/dma.c     **** }
  43              		.loc 1 9 1
  44 0010 00BF     		nop
  45 0012 BD46     		mov	sp, r7
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 0014 80BC     		pop	{r7}
  49              		.cfi_restore 7
  50              		.cfi_def_cfa_offset 0
  51 0016 7047     		bx	lr
  52              	.L3:
  53              		.align	2
  54              	.L2:
  55 0018 00380240 		.word	1073887232
  56              		.cfi_endproc
  57              	.LFE194:
  59              		.align	1
  60              		.global	DMA2_transfer
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	DMA2_transfer:
  66              	.LFB195:
  10:src/dma.c     **** 
  11:src/dma.c     **** void DMA2_transfer(uint32_t *src, uint32_t *dst, uint32_t size)
  12:src/dma.c     **** {
  67              		.loc 1 12 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 16
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 001c 80B4     		push	{r7}
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 7, -4
  75 001e 85B0     		sub	sp, sp, #20
  76              		.cfi_def_cfa_offset 24
  77 0020 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
  79 0022 F860     		str	r0, [r7, #12]
  80 0024 B960     		str	r1, [r7, #8]
  81 0026 7A60     		str	r2, [r7, #4]
  13:src/dma.c     **** 
  14:src/dma.c     ****     // instructions in 8.3.18
  15:src/dma.c     ****     // 1. disable DMA while setting flags
  16:src/dma.c     ****     DMA2_Stream0->CR &= ~(DMA_SxCR_EN);
  82              		.loc 1 16 17
  83 0028 154B     		ldr	r3, .L6
  84 002a 1B68     		ldr	r3, [r3]
  85 002c 144A     		ldr	r2, .L6
  86              		.loc 1 16 22
  87 002e 23F00103 		bic	r3, r3, #1
  88 0032 1360     		str	r3, [r2]
  17:src/dma.c     ****     // transfer unit size is 1 byte by default (msize)
  18:src/dma.c     ****     // 2. set src ptr
  19:src/dma.c     ****     DMA2_Stream0->PAR = (uint32_t)src;  //gcc wants this to be a uin32_t but it is an address
  89              		.loc 1 19 17
  90 0034 124A     		ldr	r2, .L6
  91              		.loc 1 19 25
  92 0036 FB68     		ldr	r3, [r7, #12]
  93              		.loc 1 19 23
  94 0038 9360     		str	r3, [r2, #8]
  20:src/dma.c     ****     // 3. set dst ptr
  21:src/dma.c     ****     DMA2_Stream0->M0AR = (uint32_t)dst; //gcc wants this to be a uin32_t but it is an address
  95              		.loc 1 21 17
  96 003a 114A     		ldr	r2, .L6
  97              		.loc 1 21 26
  98 003c BB68     		ldr	r3, [r7, #8]
  99              		.loc 1 21 24
 100 003e D360     		str	r3, [r2, #12]
  22:src/dma.c     ****     // 4. set number of data
  23:src/dma.c     ****     DMA2_Stream0->NDTR = size;
 101              		.loc 1 23 17
 102 0040 0F4A     		ldr	r2, .L6
 103              		.loc 1 23 24
 104 0042 7B68     		ldr	r3, [r7, #4]
 105 0044 5360     		str	r3, [r2, #4]
  24:src/dma.c     ****     // 5. channel request CHSEL is 0 by default
  25:src/dma.c     ****     // 6. DMA is controller (for mem-to-mem) by default (not peripheral)
  26:src/dma.c     ****     // 7. priority is low by default
  27:src/dma.c     ****     // 8. ?
  28:src/dma.c     ****     // 9. increment src and dst pointers,mset CR to '10' memory-to-memory mode
  29:src/dma.c     ****     DMA2_Stream0->CR |= DMA_SxCR_MINC | DMA_SxCR_PINC | DMA_SxCR_DIR_1;
 106              		.loc 1 29 17
 107 0046 0E4B     		ldr	r3, .L6
 108 0048 1B68     		ldr	r3, [r3]
 109 004a 0D4A     		ldr	r2, .L6
 110              		.loc 1 29 22
 111 004c 43F4D063 		orr	r3, r3, #1664
 112 0050 1360     		str	r3, [r2]
  30:src/dma.c     ****     // clear interrupt flags before enabling (8.5.5)
  31:src/dma.c     ****     DMA2->LIFCR |= DMA_LIFCR_CTCIF0 | DMA_LIFCR_CHTIF0;
 113              		.loc 1 31 9
 114 0052 0C4B     		ldr	r3, .L6+4
 115 0054 9B68     		ldr	r3, [r3, #8]
 116 0056 0B4A     		ldr	r2, .L6+4
 117              		.loc 1 31 17
 118 0058 43F03003 		orr	r3, r3, #48
 119 005c 9360     		str	r3, [r2, #8]
  32:src/dma.c     ****     // 10. start transfer
  33:src/dma.c     ****     DMA2_Stream0->CR |= DMA_SxCR_EN;
 120              		.loc 1 33 17
 121 005e 084B     		ldr	r3, .L6
 122 0060 1B68     		ldr	r3, [r3]
 123 0062 074A     		ldr	r2, .L6
 124              		.loc 1 33 22
 125 0064 43F00103 		orr	r3, r3, #1
 126 0068 1360     		str	r3, [r2]
  34:src/dma.c     **** 
  35:src/dma.c     ****     // since this is polling, wait until transfer is over (8.3.7)
  36:src/dma.c     ****     while (DMA2_Stream0->NDTR)
 127              		.loc 1 36 11
 128 006a 00BF     		nop
 129              	.L5:
 130              		.loc 1 36 24 discriminator 1
 131 006c 044B     		ldr	r3, .L6
 132 006e 5B68     		ldr	r3, [r3, #4]
 133              		.loc 1 36 12 discriminator 1
 134 0070 002B     		cmp	r3, #0
 135 0072 FBD1     		bne	.L5
  37:src/dma.c     ****     {
  38:src/dma.c     ****     }
  39:src/dma.c     **** }
 136              		.loc 1 39 1
 137 0074 00BF     		nop
 138 0076 00BF     		nop
 139 0078 1437     		adds	r7, r7, #20
 140              		.cfi_def_cfa_offset 4
 141 007a BD46     		mov	sp, r7
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 007c 80BC     		pop	{r7}
 145              		.cfi_restore 7
 146              		.cfi_def_cfa_offset 0
 147 007e 7047     		bx	lr
 148              	.L7:
 149              		.align	2
 150              	.L6:
 151 0080 10640240 		.word	1073898512
 152 0084 00640240 		.word	1073898496
 153              		.cfi_endproc
 154              	.LFE195:
 156              		.section	.rodata
 157              		.align	2
 158              	.LC3:
 159 0000 257300   		.ascii	"%s\000"
 160 0003 00       		.align	2
 161              	.LC0:
 162 0004 31323334 		.ascii	"12345 \015\012\000"
 162      35200D0A 
 162      00
 163 000d 000000   		.align	2
 164              	.LC1:
 165 0010 61626364 		.ascii	"abcde \015\012\000"
 165      65200D0A 
 165      00
 166 0019 000000   		.align	2
 167              	.LC2:
 168 001c 35343332 		.ascii	"54321 \015\012\000"
 168      31200D0A 
 168      00
 169              		.text
 170              		.align	1
 171              		.global	using_dma
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	using_dma:
 177              	.LFB196:
  40:src/dma.c     **** 
  41:src/dma.c     **** void using_dma()
  42:src/dma.c     **** {
 178              		.loc 1 42 1
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 40
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0088 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 008a 8AB0     		sub	sp, sp, #40
 187              		.cfi_def_cfa_offset 48
 188 008c 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
  43:src/dma.c     ****     uint8_t tx_buffer_src1[] = "12345 \r\n";
 190              		.loc 1 43 13
 191 008e 194A     		ldr	r2, .L9
 192 0090 07F11C03 		add	r3, r7, #28
 193 0094 07CA     		ldm	r2, {r0, r1, r2}
 194 0096 03C3     		stmia	r3!, {r0, r1}
 195 0098 1A70     		strb	r2, [r3]
  44:src/dma.c     ****     uint8_t tx_buffer_src2[] = "abcde \r\n";
 196              		.loc 1 44 13
 197 009a 174A     		ldr	r2, .L9+4
 198 009c 07F11003 		add	r3, r7, #16
 199 00a0 07CA     		ldm	r2, {r0, r1, r2}
 200 00a2 03C3     		stmia	r3!, {r0, r1}
 201 00a4 1A70     		strb	r2, [r3]
  45:src/dma.c     **** 
  46:src/dma.c     ****     uint8_t tx_buffer_dst[] = "54321 \r\n";
 202              		.loc 1 46 13
 203 00a6 154A     		ldr	r2, .L9+8
 204 00a8 3B1D     		adds	r3, r7, #4
 205 00aa 07CA     		ldm	r2, {r0, r1, r2}
 206 00ac 03C3     		stmia	r3!, {r0, r1}
 207 00ae 1A70     		strb	r2, [r3]
  47:src/dma.c     **** 
  48:src/dma.c     ****     //printf("%i %i \r\n", DMA2->LISR, DMA2->HISR);
  49:src/dma.c     **** 
  50:src/dma.c     ****     printf("%s", tx_buffer_dst);
 208              		.loc 1 50 5
 209 00b0 3B1D     		adds	r3, r7, #4
 210 00b2 1946     		mov	r1, r3
 211 00b4 1248     		ldr	r0, .L9+12
 212 00b6 FFF7FEFF 		bl	printf
  51:src/dma.c     ****     DMA2_transfer((uint32_t *)tx_buffer_src1, (uint32_t *)tx_buffer_dst, 6);
 213              		.loc 1 51 5
 214 00ba 391D     		adds	r1, r7, #4
 215 00bc 07F11C03 		add	r3, r7, #28
 216 00c0 0622     		movs	r2, #6
 217 00c2 1846     		mov	r0, r3
 218 00c4 FFF7FEFF 		bl	DMA2_transfer
  52:src/dma.c     **** 
  53:src/dma.c     ****     printf("%s", tx_buffer_dst);
 219              		.loc 1 53 5
 220 00c8 3B1D     		adds	r3, r7, #4
 221 00ca 1946     		mov	r1, r3
 222 00cc 0C48     		ldr	r0, .L9+12
 223 00ce FFF7FEFF 		bl	printf
  54:src/dma.c     ****     DMA2_transfer((uint32_t *)tx_buffer_src2, (uint32_t *)tx_buffer_dst, 6);
 224              		.loc 1 54 5
 225 00d2 391D     		adds	r1, r7, #4
 226 00d4 07F11003 		add	r3, r7, #16
 227 00d8 0622     		movs	r2, #6
 228 00da 1846     		mov	r0, r3
 229 00dc FFF7FEFF 		bl	DMA2_transfer
  55:src/dma.c     **** 
  56:src/dma.c     ****     printf("%s", tx_buffer_dst);
 230              		.loc 1 56 5
 231 00e0 3B1D     		adds	r3, r7, #4
 232 00e2 1946     		mov	r1, r3
 233 00e4 0648     		ldr	r0, .L9+12
 234 00e6 FFF7FEFF 		bl	printf
  57:src/dma.c     **** 
  58:src/dma.c     **** 
  59:src/dma.c     **** }...
 235              		.loc 1 59 1
 236 00ea 00BF     		nop
 237 00ec 2837     		adds	r7, r7, #40
 238              		.cfi_def_cfa_offset 8
 239 00ee BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 00f0 80BD     		pop	{r7, pc}
 243              	.L10:
 244 00f2 00BF     		.align	2
 245              	.L9:
 246 00f4 04000000 		.word	.LC0
 247 00f8 10000000 		.word	.LC1
 248 00fc 1C000000 		.word	.LC2
 249 0100 00000000 		.word	.LC3
 250              		.cfi_endproc
 251              	.LFE196:
 253              	.Letext0:
 254              		.file 2 "/home/ben/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/
 255              		.file 3 "/home/ben/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_std
 256              		.file 4 "vendor/stm32f767xx.h"
 257              		.file 5 "/home/ben/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dma.c
     /tmp/ccnWrXX9.s:18     .text:00000000 $t
     /tmp/ccnWrXX9.s:24     .text:00000000 DMA2_channel_init
     /tmp/ccnWrXX9.s:55     .text:00000018 $d
     /tmp/ccnWrXX9.s:59     .text:0000001c $t
     /tmp/ccnWrXX9.s:65     .text:0000001c DMA2_transfer
     /tmp/ccnWrXX9.s:151    .text:00000080 $d
     /tmp/ccnWrXX9.s:157    .rodata:00000000 $d
     /tmp/ccnWrXX9.s:170    .text:00000088 $t
     /tmp/ccnWrXX9.s:176    .text:00000088 using_dma
     /tmp/ccnWrXX9.s:246    .text:000000f4 $d
                           .group:00000000 wm4.0.b9144c81caf0c2c1ee9424d16d32a8e9
                           .group:00000000 wm4.stm32f767xx.h.34.d0ba5a0a33e572d9abba2a69be3f047a
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.d554620bb17bd3b714c3fb5c268772bc
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.30.d128735bf87720f7436b74fefeb5043c
                           .group:00000000 wm4.core_cm7.h.67.c4fc7696682f9e831eac3dd54a48d9d5
                           .group:00000000 wm4.arm_acle.h.28.a0697f530ff2dbf8c463bef049b82760
                           .group:00000000 wm4.cmsis_gcc.h.39.eba7438bc45fd1a6e6376b63ffe44436
                           .group:00000000 wm4.cmsis_gcc_m.h.24.23847e2e684820077e61f12ca9bb647d
                           .group:00000000 wm4.core_cm7.h.182.bdcc4e50bcd2482b3ee7b3848e1c3d57
                           .group:00000000 wm4.armv7m_mpu.h.24.6a1cc6ec2305a465645532db695e36b9
                           .group:00000000 wm4.armv7m_cachel1.h.24.936dd92d6e204a8d0b17d5e4ea4a356e
                           .group:00000000 wm4.stm32f767xx.h.1291.96cbc8c974f635ff90f2e384fa7968c7
                           .group:00000000 wm4.newlib.h.7.d92c3fcef74a31e0d5308877d46e9786
                           .group:00000000 wm4.ieeefp.h.77.b6f5ce903562917fbd9193ee87d4fa47
                           .group:00000000 wm4.config.h.224.88344135d9de3e7ea139102cd6493448
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.185.cbb642e1ccd385e8aa504b15cb7fb086
                           .group:00000000 wm4.cdefs.h.49.56fd742369e655e7e8a7e365e706e208
                           .group:00000000 wm4.stddef.h.39.6817658cc6bc4c7c8354d2009e4a5777
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.390de510207922ae4defb78c0f450fc3
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.reent.h.463.ea06f504d21c8c4258c6fe87e50d6d65
                           .group:00000000 wm4.stdio.h.67.0cf8a9c281ab0b348aef5c02e7e48825
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.408e5d973372126daeef099c555b2753

UNDEFINED SYMBOLS
printf
